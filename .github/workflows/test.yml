name: 🎭 Israeli Theater Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🔍 Run ESLint
      run: npm run lint

    - name: 🧪 Run tests
      run: npm test -- --coverage --watchAll=false

    - name: 📊 Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

    - name: 🏗️ Build application
      run: npm run build

    - name: 🔍 Type check
      run: npx tsc --noEmit

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🔍 Run security audit
      run: npm audit --audit-level=moderate

    - name: 🔐 Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  e2e:
    name: 🌐 E2E Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 📥 Install dependencies
      run: npm ci

    - name: 🏗️ Build application
      run: npm run build

    - name: 🚀 Start application
      run: npm start &
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI_TEST }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL: http://localhost:3000

    - name: ⏳ Wait for application to start
      run: npx wait-on http://localhost:3000

    - name: 🧪 Run Playwright tests
      run: npx playwright test
      if: false # Disable until Playwright is set up

  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'

    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4

    - name: 🚀 Deploy to Vercel Preview
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
